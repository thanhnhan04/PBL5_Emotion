from picamera2 import Picamera2
import cv2
import requests
import sounddevice as sd
import scipy.io.wavfile as wav
import numpy as np
import time
import io

# Thay ƒë·ªïi ƒë·ªãa ch·ªâ IP sau th√†nh ƒë·ªãa ch·ªâ c·ªßa m√°y ch·∫°y Flask server
FLASK_SERVER = 'http://localhost:5000'

# C·∫•u h√¨nh audio
AUDIO_RATE = 16000
AUDIO_DURATION = 3  # gi√¢y

# Kh·ªüi t·∫°o camera
picam2 = Picamera2()
picam2.configure(picam2.create_preview_configuration(main={"format": 'RGB888', "size": (640, 480)}))
picam2.start()

# Global variables for customer details
customer_id = None
trip_id = None
trip_duration = None

def send_image():
    try:
        frame = picam2.capture_array()
    except Exception as e:
        print("Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c ·∫£nh t·ª´ camera:", e)
        return

    gray = cv2.cvtColor(frame, cv2.COLOR_RGB2GRAY)
    _, img_encoded = cv2.imencode('.jpg', gray)
    files = {'file': ('image.jpg', img_encoded.tobytes(), 'image/jpeg')}
    data = {
        'customer_id': customer_id,
        'trip_id': trip_id
    }

    try:
        res = requests.post(f'{FLASK_SERVER}/upload_image', files=files, data=data)
        if res.ok:
            print("[·∫¢nh] G·ª≠i th√†nh c√¥ng:", res.json())
        else:
            print("[·∫¢nh] L·ªói t·ª´ server:", res.status_code)
    except Exception as e:
        print("[·∫¢nh] L·ªói khi g·ª≠i:", e)

def send_audio():
    print("üéôÔ∏è  Ghi √¢m...")
    audio = sd.rec(int(AUDIO_DURATION * AUDIO_RATE), samplerate=AUDIO_RATE, channels=1, dtype='int16')
    sd.wait()

    # Ghi v√†o buffer thay v√¨ file t·∫°m
    wav_buffer = io.BytesIO()
    wav.write(wav_buffer, AUDIO_RATE, audio)
    wav_buffer.seek(0)

    files = {'file': ('temp.wav', wav_buffer, 'audio/wav')}
    try:
        res = requests.post(f'{FLASK_SERVER}/upload_audio', files=files)
        if res.ok:
            print("[√Çm thanh] G·ª≠i th√†nh c√¥ng:", res.json())
        else:
            print("[√Çm thanh] L·ªói t·ª´ server:", res.status_code)
    except Exception as e:
        print("[√Çm thanh] L·ªói khi g·ª≠i:", e)

# Wait for server signal to start
try:
    print("‚è≥ ƒêang ch·ªù t√≠n hi·ªáu t·ª´ server ƒë·ªÉ b·∫Øt ƒë·∫ßu...")
    while True:
        res = requests.get(f'{FLASK_SERVER}/start_signal')
        if res.ok and res.json().get('start'):
            customer_id = res.json().get('customer_id')
            trip_id = res.json().get('trip_id')
            trip_duration = res.json().get('trip_duration')
            print(f"‚úÖ B·∫Øt ƒë·∫ßu thu th·∫≠p d·ªØ li·ªáu cho Trip ID {trip_id} (Customer ID: {customer_id}) trong {trip_duration} ph√∫t.")
            break
        time.sleep(2)

    # Start sending data
    start_time = time.time()
    while time.time() - start_time < trip_duration * 60:
        send_image()
        time.sleep(2)  # G·ª≠i m·ªói 2 gi√¢y

except KeyboardInterrupt:
    print("üõë D·ª´ng ch∆∞∆°ng tr√¨nh.")

finally:
    picam2.stop()
